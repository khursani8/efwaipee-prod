{"version":3,"sources":["api/thesis/thesis.controller.js"],"names":["index","indexGroup","show","showStudent","showThesis","create","upsert","patch","destroy","accessKeyId","process","env","aKId","secretAccessKey","secret","smsMessage","AWS","require","config","update","region","sns","SNS","respondWithResult","res","statusCode","entity","status","json","patchUpdates","patches","value","checkpoint","console","log","find","studentId","exec","then","res1","forEach","el","elid","_id","enid","apply","time","Date","params","Message","PhoneNumber","examinerPhone","publish","err","data","stack","reject","save","tarikh","op","path","removeEntity","remove","end","handleEntityNotFound","handleError","send","req","sort","catch","aggregate","$group","$push","$first","findById","id","$match","name","body","findOneAndUpdate","new","setDefaultsOnInsert","runValidators"],"mappings":"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","file":"thesis.controller.js","sourcesContent":["/**\r\n * Using Rails-like standard naming convention for endpoints.\r\n * GET     /api/thesis              ->  index\r\n * POST    /api/thesis              ->  create\r\n * GET     /api/thesis/:id          ->  show\r\n * PUT     /api/thesis/:id          ->  upsert\r\n * PATCH   /api/thesis/:id          ->  patch\r\n * DELETE  /api/thesis/:id          ->  destroy\r\n */\r\n\r\n'use strict';\r\n\r\nimport jsonpatch from 'fast-json-patch';\r\nimport Thesis from './thesis.model';\r\nimport Log from '../log/log.model';\r\n\r\nvar accessKeyId = process.env.aKId\r\nvar secretAccessKey = process.env.secret\r\nvar smsMessage = 'Thesis from Universiti Teknologi Petronas have been sent to you.Please browse https://cgs.sani.tech and scan the QRcode inside the thesis when received'\r\n\r\nvar AWS = require('aws-sdk');\r\nAWS.config.update({region:'us-east-1',accessKeyId,secretAccessKey});\r\nvar sns = new AWS.SNS();\r\n\r\nfunction respondWithResult(res, statusCode) {\r\n  statusCode = statusCode || 200;\r\n  return function(entity) {\r\n    if(entity) {\r\n      return res.status(statusCode).json(entity);\r\n    }\r\n    return null;\r\n  };\r\n}\r\n\r\nfunction patchUpdates(patches) {\r\n  \r\n  return function(entity) {\r\n\r\n  patches.value = entity.checkpoint+1\r\n  console.log('entity before',entity)\r\n\r\n  if(patches.value==2){  //easy update for all document to CGS SEND\r\n    Thesis.find({'studentId':entity.studentId}).exec()\r\n      .then((res1)=>{\r\n        res1.forEach(function(el) {\r\n          var elid = \"\"+el._id\r\n          var enid = \"\"+entity._id\r\n          console.log('checkid',elid,enid,elid == enid);\r\n          if(el.checkpoint<3 && elid != enid){  //kalau ada yg baru tak kan effect yg lama punya document\r\n            try {\r\n            jsonpatch.apply(el, [patches], /*validate*/ true);\r\n            Log.create({'thesisId':el._id,'checkpoint':el.checkpoint,time:new Date(),'studentId':el.studentId})\r\n            var params = {\r\n              Message: smsMessage,\r\n              PhoneNumber: el.examinerPhone,\r\n            };\r\n            if(secretAccessKey){\r\n              sns.publish(params, function(err, data) {\r\n              if (err) console.log(err, err.stack); // an error occurred\r\n              else     console.log(data);           // successful response\r\n            });\r\n            }\r\n            \r\n          } catch(err) {\r\n            return Promise.reject(err);\r\n          }\r\n          el.save();\r\n          }\r\n        }, this);\r\n      })\r\n  }\r\n\r\n    try {\r\n      var tarikh = new Date();\r\n      if(patches.value==3){ //patch tarikh je\r\n        jsonpatch.apply(entity, [{op: 'replace', path: '/dateReceived', value: tarikh}]);\r\n      }\r\n      \r\n      jsonpatch.apply(entity, [patches], /*validate*/ true);\r\n      console.log('dkt checkpoitn',entity.checkpoint);\r\n      if(entity.checkpoint!==5)\r\n        Log.create({'thesisId':entity._id,'checkpoint':entity.checkpoint,time:tarikh,'studentId':entity.studentId})\r\n    } catch(err) {\r\n      return Promise.reject(err);\r\n    }\r\n    return entity.save();\r\n  };\r\n}\r\n\r\nfunction removeEntity(res) {\r\n  return function(entity) {\r\n    if(entity) {\r\n\r\n      return entity.remove()\r\n        .then(() => {\r\n          Log.find({\r\n            'thesisId':entity._id\r\n          }).remove().exec();\r\n          res.status(204).end();\r\n        });\r\n    }\r\n  };\r\n}\r\n\r\nfunction handleEntityNotFound(res) {\r\n  return function(entity) {\r\n    if(!entity) {\r\n      res.status(404).end();\r\n      return null;\r\n    }\r\n    return entity;\r\n  };\r\n}\r\n\r\nfunction handleError(res, statusCode) {\r\n  statusCode = statusCode || 500;\r\n  return function(err) {\r\n    res.status(statusCode).send(err);\r\n  };\r\n}\r\n\r\n// Gets a list of Thesiss\r\nexport function index(req, res) {\r\n  return Thesis.find().sort({\"name\": 1}).exec()\r\n    .then(respondWithResult(res))\r\n    .catch(handleError(res));\r\n}\r\n\r\n// Gets a list of Thesis group\r\nexport function indexGroup(req, res) {\r\n  return Thesis.aggregate([\r\n\t\t{\r\n\t\t\t$group: {\r\n\t\t\t\t\"_id\":\"$name\",\r\n        \"id\":{$push:\"$_id\"},\r\n        \"studentId\":{$first:\"$studentId\"},\r\n        \"examinerName\":{$push:\"$examinerName\"},\r\n        \"studentName\":{$first:\"$studentName\"}\r\n      }\r\n\t\t},\r\n\t])\r\n    .exec()\r\n    .then(respondWithResult(res))\r\n    .catch(handleError(res));\r\n}\r\n\r\n\r\n// Gets a single Thesis from the DB\r\nexport function show(req, res) {\r\n  return Thesis.findById(req.params.id).exec()\r\n    .then(handleEntityNotFound(res))\r\n    .then(respondWithResult(res))\r\n    .catch(handleError(res));\r\n}\r\n\r\n// Gets a single Thesis based on student Idfrom the DB\r\nexport function showStudent(req, res) {\r\n  return Thesis.find({\"studentId\":req.params.id}).exec()\r\n    .then(handleEntityNotFound(res))\r\n    .then(respondWithResult(res))\r\n    .catch(handleError(res));\r\n}\r\n\r\nexport function showThesis(req, res) {\r\n  // console.log(\"show Thesis\",req.params.name);\r\n  return Thesis.aggregate([\r\n    {\r\n\t\t\t$match: {\"name\":{'$regex':req.params.name,'$options':'i'}}\r\n\t\t},\r\n\t\t{\r\n\t\t\t$group: {\r\n\t\t\t\t\"_id\":\"$name\",\r\n\t\t\t\t\"id\":{$push:\"$_id\"},\r\n        \"examinerName\":{$push:\"$examinerName\"},\r\n        \"studentName\":{$first:\"$studentName\"}\r\n      }\r\n\t\t},\r\n\t])\r\n  \r\n  .exec()\r\n    .then(handleEntityNotFound(res))\r\n    .then(respondWithResult(res))\r\n    .catch(handleError(res));\r\n}\r\n\r\n// Creates a new Thesis in the DB\r\nexport function create(req, res) {\r\n  return Thesis.create(req.body)\r\n    .then((el)=>{\r\n      Log.create({'thesisId':el._id,'checkpoint':el.checkpoint,time:new Date(),'studentId':el.studentId})\r\n    })\r\n    .then(respondWithResult(res, 201))\r\n    .catch(handleError(res));\r\n}\r\n\r\n// Upserts the given Thesis in the DB at the specified ID\r\nexport function upsert(req, res) {\r\n  if(req.body._id) {\r\n    delete req.body._id;\r\n  }\r\n  return Thesis.findOneAndUpdate({_id: req.params.id}, req.body, {new: true, upsert: true, setDefaultsOnInsert: true, runValidators: true}).exec()\r\n\r\n    .then(respondWithResult(res))\r\n    .catch(handleError(res));\r\n}\r\n\r\n// Updates an existing Thesis in the DB\r\nexport function patch(req, res) {\r\n  if(req.body._id) {\r\n    delete req.body._id;\r\n  }\r\n  \r\n  return Thesis.findById(req.params.id).exec()\r\n    .then(handleEntityNotFound(res))\r\n    .then(patchUpdates(req.body))\r\n    .then(respondWithResult(res))\r\n    .catch(handleError(res));\r\n}\r\n\r\n// Deletes a Thesis from the DB\r\nexport function destroy(req, res) {\r\n  return Thesis.findById(req.params.id).exec()\r\n    .then(handleEntityNotFound(res))\r\n    .then(removeEntity(res))\r\n    .catch(handleError(res));\r\n}\r\n"]}