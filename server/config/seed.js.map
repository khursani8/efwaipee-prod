{"version":3,"sources":["config/seed.js"],"names":["seedDatabaseIfNeeded","seedDB","find","remove","then","create","provider","name","email","password","role","console","log","catch","err"],"mappings":"AAAA;;;;;AAKA;AACA;;;;;kBAIwBA,oB;;AAHxB;;;;AACA;;;;;;AAEe,SAASA,oBAAT,GAAgC;AAC7C,MAAG,sBAAOC,MAAV,EAAkB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAKC,IAAL,CAAU,EAAV,EAAcC,MAAd,GACGC,IADH,CACQ,YAAM;AACV,qBAAKC,MAAL,CAAY;AACVC,kBAAU,OADA;AAEVC,cAAM,WAFI;AAGVC,eAAO,kBAHG;AAIVC,kBAAU;AAJA,OAAZ,EAKG;AACDH,kBAAU,OADT;AAEDI,cAAM,OAFL;AAGDH,cAAM,OAHL;AAIDC,eAAO,mBAJN;AAKDC,kBAAU;AALT,OALH,EAYCL,IAZD,CAYM;AAAA,eAAMO,QAAQC,GAAR,CAAY,2BAAZ,CAAN;AAAA,OAZN,EAaCC,KAbD,CAaO;AAAA,eAAOF,QAAQC,GAAR,CAAY,wBAAZ,EAAsCE,GAAtC,CAAP;AAAA,OAbP;AAcD,KAhBH;AAiBD;AACF","file":"seed.js","sourcesContent":["/**\r\n * Populate DB with sample data on server start\r\n * to disable, edit config/environment/index.js, and set `seedDB: false`\r\n */\r\n\r\n'use strict';\r\n// import Thing from '../api/thing/thing.model';\r\nimport User from '../api/user/user.model';\r\nimport config from './environment/';\r\n\r\nexport default function seedDatabaseIfNeeded() {\r\n  if(config.seedDB) {\r\n    // Thing.find({}).remove()\r\n    //   .then(() => {\r\n    //     Thing.create({\r\n    //       name: 'Development Tools',\r\n    //       info: 'Integration with popular tools such as Webpack, Gulp, Babel, TypeScript, Karma, '\r\n    //             + 'Mocha, ESLint, Node Inspector, Livereload, Protractor, Pug, '\r\n    //             + 'Stylus, Sass, and Less.'\r\n    //     }, {\r\n    //       name: 'Server and Client integration',\r\n    //       info: 'Built with a powerful and fun stack: MongoDB, Express, '\r\n    //             + 'AngularJS, and Node.'\r\n    //     }, {\r\n    //       name: 'Smart Build System',\r\n    //       info: 'Build system ignores `spec` files, allowing you to keep '\r\n    //             + 'tests alongside code. Automatic injection of scripts and '\r\n    //             + 'styles into your index.html'\r\n    //     }, {\r\n    //       name: 'Modular Structure',\r\n    //       info: 'Best practice client and server structures allow for more '\r\n    //             + 'code reusability and maximum scalability'\r\n    //     }, {\r\n    //       name: 'Optimized Build',\r\n    //       info: 'Build process packs up your templates as a single JavaScript '\r\n    //             + 'payload, minifies your scripts/css/images, and rewrites asset '\r\n    //             + 'names for caching.'\r\n    //     }, {\r\n    //       name: 'Deployment Ready',\r\n    //       info: 'Easily deploy your app to Heroku or Openshift with the heroku '\r\n    //             + 'and openshift subgenerators'\r\n    //     });\r\n    //   })\r\n    // .then(() => console.log('finished populating things'))\r\n    // .catch(err => console.log('error populating things', err));\r\n\r\n    User.find({}).remove()\r\n      .then(() => {\r\n        User.create({\r\n          provider: 'local',\r\n          name: 'Test User',\r\n          email: 'test@example.com',\r\n          password: 'test'\r\n        }, {\r\n          provider: 'local',\r\n          role: 'admin',\r\n          name: 'Admin',\r\n          email: 'admin@example.com',\r\n          password: 'admin'\r\n        })\r\n        .then(() => console.log('finished populating users'))\r\n        .catch(err => console.log('error populating users', err));\r\n      });\r\n  }\r\n}\r\n"]}